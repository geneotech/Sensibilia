
level 2: {
  ["(*temporary)"] = {
    debug = <function 1>,
    gethook = <function 2>,
    getinfo = <function 3>,
    getlocal = <function 4>,
    getmetatable = <function 5>,
    getregistry = <function 6>,
    getupvalue = <function 7>,
    getuservalue = <function 8>,
    my_breakpoint = <function 9>,
    my_traceback = <function 10>,
    sethook = <function 11>,
    setlocal = <function 12>,
    setmetatable = <function 13>,
    setupvalue = <function 14>,
    setuservalue = <function 15>,
    traceback = <function 16>,
    upvalueid = <function 17>,
    upvaluejoin = <function 18>
  }
}
level 3: {
  ["(*temporary)"] = "sensibilia\\scripts\\camera.lua"
}
level 4: {}
level 5: {
  ["(*temporary)"] = "sensibilia\\scripts\\sensibilia.lua"
}
level 6: {}
level 7: {
  ["(*temporary)"] = "sensibilia\\scripts\\sensibilia_init.lua"
}
level 8: {
  CURRENT_SCENE = "sensibilia\\scripts\\sensibilia_init.lua"
}

stack traceback:
	[string "METERS_TO_PIXELS = 50..."]:44: in function <[string "METERS_TO_PIXELS = 50..."]:11>
	[C]: in ?
	[C]: in function 'dofile'
	sensibilia\scripts\sensibilia.lua:16: in main chunk
	[C]: in function 'dofile'
	sensibilia\scripts\sensibilia_init.lua:48: in main chunk
	[C]: in function 'dofile'
	[string "METERS_TO_PIXELS = 50..."]:91: in main chunk
Globals:
gen_circle_vertices:
<function 1>

entity_ptr:
<userdata 1>

rawlen:
<function 1>

raycast_output:
<userdata 1>

os:
{
  clock = <function 1>,
  date = <function 2>,
  difftime = <function 3>,
  execute = <function 4>,
  exit = <function 5>,
  getenv = <function 6>,
  remove = <function 7>,
  rename = <function 8>,
  setlocale = <function 9>,
  time = <function 10>,
  tmpname = <function 11>
}

obstacle_avoidance_behaviour:
<userdata 1>

global_instability_rays:
{}

debug_draw:
<function 1>

target_info:
<userdata 1>

custom_intents:
{
  DROP_WEAPON = 999999992,
  GRAVITY_CHANGE = 999999990,
  INSTABILITY_RAY = 999999988,
  INSTANT_SLOWDOWN = 999999996,
  JUMP = 999999991,
  MY_INTENT = 999999989,
  QUIT = 999999993,
  RESTART = 999999997,
  SPEED_DECREASE = 999999994,
  SPEED_INCREASE = 999999995,
  STEERING_REQUEST = 999999998,
  ZOOM_CAMERA = 999999999
}

base_gravity:
<userdata 1>

class_info_data:
<userdata 1>

create_entity:
<function 1>

crosshair_component:
<userdata 1>

current_gravity:
<userdata 1>

entity_creation_util:
<userdata 1>

simple_integration:
<function 1>

_script_reloader:
<userdata 1>

map_uv_square:
<function 1>

movement_component:
<userdata 1>

stability:
1

ipairs:
<function 1>

call_on_modification:
<function 1>

class_info:
<function 1>

camera_component:
<userdata 1>

physics_system:
<userdata 1>

reversed:
<function 1>

filter_instability_ray:
{
  categoryBits = 15,
  maskBits = 1
}

animation:
<userdata 1>

minmax_u:
<userdata 1>

particle:
<userdata 1>

pathfinding_component:
<userdata 1>

create_joint:
<function 1>

get_display:
<function 1>

b2Body:
<userdata 1>

load:
<function 1>

add_vals:
<function 1>

open_script:
<function 1>

b2Vec2:
<userdata 1>

PIXELS_TO_METERS:
0.02

timed_sequence:
{
  add_action = <function 1>,
  constructor = <function 2>,
  create = <function 3>,
  now_action = <function 4>,
  play = <function 5>,
  set_current_action = <function 6>,
  should_loop = <function 7>,
  start = <function 8>,
  validate_action = <function 9>,
  <metatable> = {
    __index = {}
  }
}

flee_behaviour:
<userdata 1>

ptr_create_entity_group:
<function 1>

sprite:
<userdata 1>

visibility_layer:
<userdata 1>

bit32:
{
  arshift = <function 1>,
  band = <function 2>,
  bnot = <function 3>,
  bor = <function 4>,
  btest = <function 5>,
  bxor = <function 6>,
  extract = <function 7>,
  lrotate = <function 8>,
  lshift = <function 9>,
  replace = <function 10>,
  rrotate = <function 11>,
  rshift = <function 12>
}

b2RevoluteJointDef:
<userdata 1>

print:
<function 1>

ENGINE_DIRECTORY:
"engine\\"

framebuffer_object:
<userdata 1>

pv:
<function 1>

select:
<function 1>

create_particle_effect:
<function 1>

ptr_create_entity:
<function 1>

target_gravity_rotation:
0

steering_component:
<userdata 1>

error:
<function 1>

require:
<function 1>

polygon:
<userdata 1>

set_physics_info:
<function 1>

io:
{
  close = <function 1>,
  flush = <function 2>,
  input = <function 3>,
  lines = <function 4>,
  open = <function 5>,
  output = <function 6>,
  popen = <function 7>,
  read = <function 8>,
  stderr = <userdata 1>,
  stdin = <userdata 2>,
  stdout = <userdata 3>,
  tmpfile = <function 9>,
  type = <function 10>,
  write = <function 11>
}

setmetatable:
<function 1>

filter_npc_feet:
{
  categoryBits = 15,
  maskBits = 7
}

message:
<userdata 1>

vertex_triangle:
<userdata 1>

transform_component:
<userdata 1>

create_gun:
<function 1>

rawset:
<function 1>

_physics_system:
<userdata 1>

textures:
<userdata 1>

minmax:
<userdata 1>

math:
{
  abs = <function 1>,
  acos = <function 2>,
  asin = <function 3>,
  atan = <function 4>,
  atan2 = <function 5>,
  ceil = <function 6>,
  cos = <function 7>,
  cosh = <function 8>,
  deg = <function 9>,
  exp = <function 10>,
  floor = <function 11>,
  fmod = <function 12>,
  frexp = <function 13>,
  huge = 1.#INF,
  ldexp = <function 14>,
  log = <function 15>,
  max = <function 16>,
  min = <function 17>,
  modf = <function 18>,
  pi = 3.1415926535898,
  pow = <function 19>,
  rad = <function 20>,
  random = <function 21>,
  randomseed = <function 22>,
  sin = <function 23>,
  sinh = <function 24>,
  sqrt = <function 25>,
  tan = <function 26>,
  tanh = <function 27>
}

create_emission:
<function 1>

emission:
<userdata 1>

create_physics_component:
<function 1>

rawequal:
<function 1>

rawget:
<function 1>

rewrite_ptr:
<function 1>

getmetatable:
<function 1>

create_animation_set:
<function 1>

common:
<userdata 1>

world:
<userdata 1>

orthographic_projection:
<function 1>

behaviour_decorator:
<userdata 1>

gun_component:
<userdata 1>

physics_info:
<userdata 1>

particle_effect:
<userdata 1>

create_particle_emitter_info:
<function 1>

table:
{
  concat = <function 1>,
  insert = <function 2>,
  inspect = {
    _DESCRIPTION = "human-readable representations of tables",
    _LICENSE = '    MIT LICENSE\n\n    Copyright (c) 2013 Enrique Garc√≠a Cota\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the\n    "Software"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  ',
    _URL = "http://github.com/kikito/inspect.lua",
    _VERSION = "inspect.lua 2.0.0",
    inspect = <function 3>,
    <metatable> = {
      __call = <function 4>
    }
  },
  pack = <function 5>,
  remove = <function 6>,
  sort = <function 7>,
  unpack = <function 8>
}

dofile:
<function 1>

CHARACTERS:
1

GLSL_program:
<userdata 1>

SetDensity:
<function 1>

_visibility_system:
<userdata 1>

_pathfinding_system:
<userdata 1>

property:
<function 1>

_input_system:
<userdata 1>

class_names:
<function 1>

float_vector:
<userdata 1>

directed_behaviour:
<userdata 1>

rgba:
<userdata 1>

pathfinding_system:
<userdata 1>

behaviour_timer_decorator:
<userdata 1>

_render_system:
<userdata 1>

filter_player_visibility:
{
  categoryBits = 15,
  maskBits = 4
}

should_debug_draw:
false

resource_creation_util:
<userdata 1>

wander_behaviour:
<userdata 1>

texture:
<userdata 1>

create:
<function 1>

query_output:
<userdata 1>

images:
{
  blank = <userdata 1>
}

main_context:
<userdata 1>

filter_characters_separation:
{
  categoryBits = 15,
  maskBits = 1
}

filter_obstacle_visibility:
{
  categoryBits = 15,
  maskBits = 7
}

separation_behaviour:
<userdata 1>

create_inverse_enum:
<function 1>

create_sprite:
<function 1>

archetyped:
<function 1>

create_behaviour_tree:
<function 1>

can_point_be_reached_by_jump:
<function 1>

package:
<1>{
  config = "\\\\n;\\n?\\n!\\n-\\n",
  cpath = "C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\?.dll;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\loadall.dll;.\\?.dll",
  loaded = {
    _G = <2>{
      Box2D = <userdata 1>,
      CHARACTERS = 1,
      ENGINE_DIRECTORY = "engine\\",
      GL = <userdata 2>,
      GLSL_program = <userdata 3>,
      GLSL_shader = <userdata 4>,
      INSTABILITY_RAY = 8,
      METERS_TO_PIXELS = 50,
      OBJECTS = 2,
      PIXELS_TO_METERS = 0.02,
      STATIC_OBJECTS = 4,
      SetDensity = <function 1>,
      SetFriction = <function 2>,
      _G = <table 2>,
      _VERSION = "Lua 5.2",
      _entity = <userdata 5>,
      _input_system = <userdata 6>,
      _pathfinding_system = <userdata 7>,
      _physics_system = <userdata 8>,
      _render_system = <userdata 9>,
      _script_reloader = <userdata 10>,
      _visibility_system = <userdata 11>,
      _world = <userdata 12>,
      add_roots = <function 3>,
      add_vals = <function 4>,
      animate_component = <userdata 13>,
      animate_info = <userdata 14>,
      animate_message = <userdata 15>,
      animation = <userdata 16>,
      animation_events = <userdata 17>,
      archetyped = <function 5>,
      assert = <function 6>,
      atlas = <userdata 18>,
      avoidance_behaviour = <userdata 19>,
      b2Body = <userdata 20>,
      b2Filter = <userdata 21>,
      b2JointDef = <userdata 22>,
      b2PolygonShape = <userdata 23>,
      b2RevoluteJoint = <userdata 24>,
      b2RevoluteJointDef = <userdata 25>,
      b2Shape = <userdata 26>,
      b2Vec2 = <userdata 27>,
      b2WeldJoint = <userdata 28>,
      b2WeldJointDef = <userdata 29>,
      b2World = <userdata 30>,
      base_gravity = <userdata 31>,
      behaviour_decorator = <userdata 32>,
      behaviour_node = <userdata 33>,
      behaviour_state = <userdata 34>,
      behaviour_timer_decorator = <userdata 35>,
      behaviour_tree_component = <userdata 36>,
      behaviour_tree_task = <userdata 37>,
      bit32 = <3>{
        arshift = <function 7>,
        band = <function 8>,
        bnot = <function 9>,
        bor = <function 10>,
        btest = <function 11>,
        bxor = <function 12>,
        extract = <function 13>,
        lrotate = <function 14>,
        lshift = <function 15>,
        replace = <function 16>,
        rrotate = <function 17>,
        rshift = <function 18>
      },
      bitflag = <function 19>,
      bitor = <function 20>,
      body_to_entity = <function 21>,
      calc_air_resistance = <function 22>,
      calc_max_jump_height = <function 23>,
      call_on_modification = <function 24>,
      camera_component = <userdata 38>,
      can_point_be_reached_by_jump = <function 25>,
      changing_gravity = false,
      chase_component = <userdata 39>,
      children_component = <userdata 40>,
      clamp = <function 26>,
      class = <function 27>,
      class_info = <function 28>,
      class_info_data = <userdata 41>,
      class_names = <function 29>,
      collectgarbage = <function 30>,
      collision_message = <userdata 42>,
      common = <userdata 43>,
      config_table = {
        bpp = 24,
        doublebuffer = 1,
        fullscreen = 0,
        resolution_h = 1050,
        resolution_w = 1980,
        sensitivity = <userdata 44>,
        window_border = 0,
        window_name = "example",
        window_x = 0,
        window_y = 0
      },
      containment_behaviour = <userdata 45>,
      coroutine = <4>{
        create = <function 31>,
        resume = <function 32>,
        running = <function 33>,
        status = <function 34>,
        stepped_wait = <function 35>,
        wait = <function 36>,
        wrap = <function 37>,
        yield = <function 38>
      },
      create = <function 39>,
      create_animation = <function 40>,
      create_animation_set = <function 41>,
      create_behaviour_tree = <function 42>,
      create_emission = <function 43>,
      create_entity = <function 44>,
      create_entity_group = <function 45>,
      create_gun = <function 46>,
      create_input_context = <function 47>,
      create_inverse_enum = <function 48>,
      create_joint = <function 49>,
      create_options = <function 50>,
      create_particle = <function 51>,
      create_particle_effect = <function 52>,
      create_particle_emitter_info = <function 53>,
      create_physics_component = <function 54>,
      create_polygon = <function 55>,
      create_scriptable_info = <function 56>,
      create_sprite = <function 57>,
      create_steering = <function 58>,
      create_textures = <function 59>,
      crosshair_component = <userdata 46>,
      current_gravity = <userdata 47>,
      custom_intents = {
        DROP_WEAPON = 999999992,
        GRAVITY_CHANGE = 999999990,
        INSTABILITY_RAY = 999999988,
        INSTANT_SLOWDOWN = 999999996,
        JUMP = 999999991,
        MY_INTENT = 999999989,
        QUIT = 999999993,
        RESTART = 999999997,
        SPEED_DECREASE = 999999994,
        SPEED_INCREASE = 999999995,
        STEERING_REQUEST = 999999998,
        ZOOM_CAMERA = 999999999
      },
      damage_component = <userdata 48>,
      damage_message = <userdata 49>,
      debug = <5>{
        debug = <function 60>,
        gethook = <function 61>,
        getinfo = <function 62>,
        getlocal = <function 63>,
        getmetatable = <function 64>,
        getregistry = <function 65>,
        getupvalue = <function 66>,
        getuservalue = <function 67>,
        my_breakpoint = <function 68>,
        my_traceback = <function 69>,
        sethook = <function 70>,
        setlocal = <function 71>,
        setmetatable = <function 72>,
        setupvalue = <function 73>,
        setuservalue = <function 74>,
        traceback = <function 75>,
        upvalueid = <function 76>,
        upvaluejoin = <function 77>
      },
      debug_draw = <function 78>,
      debug_line = <userdata 50>,
      debug_target_sprite = <userdata 51>,
      debugger_break = <function 79>,
      destroy_message = <userdata 52>,
      directed_behaviour = <userdata 53>,
      dofile = <function 80>,
      drawable_concave = <userdata 54>,
      emission = <userdata 55>,
      entities = <userdata 56>,
      entity_creation_util = <userdata 57>,
      entity_ptr = <userdata 58>,
      entries_from_archetypes = <function 81>,
      error = <function 82>,
      filter_characters = {
        categoryBits = 1,
        maskBits = 15
      },
      filter_characters_separation = {
        categoryBits = 15,
        maskBits = 1
      },
      filter_instability_ray = {
        categoryBits = 15,
        maskBits = 1
      },
      filter_nothing = {
        categoryBits = 0,
        maskBits = 0
      },
      filter_npc_feet = {
        categoryBits = 15,
        maskBits = 7
      },
      filter_objects = {
        categoryBits = 2,
        maskBits = 7
      },
      filter_obstacle_visibility = {
        categoryBits = 15,
        maskBits = 7
      },
      filter_pathfinding_visibility = {
        categoryBits = 4,
        maskBits = 4
      },
      filter_player_visibility = {
        categoryBits = 15,
        maskBits = 4
      },
      filter_static_objects = {
        categoryBits = 4,
        maskBits = 7
      },
      flee_behaviour = <userdata 59>,
      float_ptr = <userdata 60>,
      float_vector = <userdata 61>,
      flocking_behaviour = <userdata 62>,
      framebuffer_object = <userdata 63>,
      gen_circle_vertices = <function 83>,
      get_display = <function 84>,
      getmetatable = <function 85>,
      global_instability_rays = {},
      global_sound_table = {},
      glwindow = <userdata 64>,
      gravity_angle_offset = 0,
      gun_component = <userdata 65>,
      images = {
        blank = <userdata 66>
      },
      inherits_from = <function 86>,
      input_component = <userdata 67>,
      input_context = <userdata 68>,
      input_system = <userdata 69>,
      instability_ray_caster = {
        cast = <function 87>,
        construct_world_polygon = <function 88>,
        constructor = <function 89>,
        create = <function 90>,
        loop = <function 91>,
        render = <function 92>,
        <metatable> = {
          __index = {}
        }
      },
      intent_message = <userdata 70>,
      io = <6>{
        close = <function 93>,
        flush = <function 94>,
        input = <function 95>,
        lines = <function 96>,
        open = <function 97>,
        output = <function 98>,
        popen = <function 99>,
        read = <function 100>,
        stderr = <userdata 71>,
        stdin = <userdata 72>,
        stdout = <userdata 73>,
        tmpfile = <function 101>,
        type = <function 102>,
        write = <function 103>
      },
      ipairs = <function 104>,
      keys = <userdata 74>,
      layers = <userdata 75>,
      load = <function 105>,
      loadfile = <function 106>,
      lookat_component = <userdata 76>,
      main_context = <userdata 77>,
      map_uv_square = <function 107>,
      math = <7>{
        abs = <function 108>,
        acos = <function 109>,
        asin = <function 110>,
        atan = <function 111>,
        atan2 = <function 112>,
        ceil = <function 113>,
        cos = <function 114>,
        cosh = <function 115>,
        deg = <function 116>,
        exp = <function 117>,
        floor = <function 118>,
        fmod = <function 119>,
        frexp = <function 120>,
        huge = 1.#INF,
        ldexp = <function 121>,
        log = <function 122>,
        max = <function 123>,
        min = <function 124>,
        modf = <function 125>,
        pi = 3.1415926535898,
        pow = <function 126>,
        rad = <function 127>,
        random = <function 128>,
        randomseed = <function 129>,
        sin = <function 130>,
        sinh = <function 131>,
        sqrt = <function 132>,
        tan = <function 133>,
        tanh = <function 134>
      },
      message = <userdata 78>,
      minmax = <userdata 79>,
      minmax_u = <userdata 80>,
      mouse = <userdata 81>,
      movement_component = <userdata 82>,
      my_atlas = <userdata 83>,
      navigation_hint = <userdata 84>,
      next = <function 135>,
      obstacle_avoidance_behaviour = <userdata 85>,
      open_script = <function 136>,
      orthographic_projection = <function 137>,
      os = <8>{
        clock = <function 138>,
        date = <function 139>,
        difftime = <function 140>,
        execute = <function 141>,
        exit = <function 142>,
        getenv = <function 143>,
        remove = <function 144>,
        rename = <function 145>,
        setlocale = <function 146>,
        time = <function 147>,
        tmpname = <function 148>
      },
      package = <table 1>,
      pairs = <function 149>,
      particle = <userdata 86>,
      particle_burst_message = <userdata 87>,
      particle_effect = <userdata 88>,
      particle_emitter_component = <userdata 89>,
      particle_emitter_info = <userdata 90>,
      pathfinding_component = <userdata 91>,
      pathfinding_system = <userdata 92>,
      pcall = <function 150>,
      physics_component = <userdata 93>,
      physics_info = <userdata 94>,
      physics_system = <userdata 95>,
      point_below_segment = <function 151>,
      polygon = <userdata 96>,
      post_destroy = <function 152>,
      print = <function 153>,
      property = <function 154>,
      ptr_create_entity = <function 155>,
      ptr_create_entity_group = <function 156>,
      ptr_lookup = <function 157>,
      pv = <function 158>,
      query_output = <userdata 97>,
      randval = <function 159>,
      raw_texture = <userdata 98>,
      rawequal = <function 160>,
      rawget = <function 161>,
      rawlen = <function 162>,
      rawset = <function 163>,
      raycast_output = <userdata 99>,
      rect_ltrb = <userdata 100>,
      rect_xywh = <userdata 101>,
      recursive_write = <function 164>,
      reloader_script = <userdata 102>,
      render_component = <userdata 103>,
      render_layers = {
        BULLETS = 6,
        EFFECTS = 1,
        GROUND = 13,
        GUI_OBJECTS = 0,
        HEADS = 3,
        LEGS = 8,
        OBJECTS = 2,
        ON_GROUND = 10,
        PLAYERS = 5,
        SHELLS = 9,
        UNDER_CORPSES = 12,
        WIELDED = 7,
        WIELDED_GUNS = 4
      },
      render_system = <userdata 104>,
      renderable = <userdata 105>,
      require = <function 165>,
      resource_creation_util = <userdata 106>,
      reversed = <function 166>,
      rewrite = <function 167>,
      rewrite_ptr = <function 168>,
      rgba = <userdata 107>,
      script = <userdata 108>,
      script_reloader = <userdata 109>,
      scriptable_component = <userdata 110>,
      scriptable_info = <userdata 111>,
      seek_behaviour = <userdata 112>,
      select = <function 169>,
      separation_behaviour = <userdata 113>,
      set_components_from_entry = <function 170>,
      set_physics_info = <function 171>,
      set_world_reloading_script = <function 172>,
      setmetatable = <function 173>,
      settings = <userdata 114>,
      sfMusic = <userdata 115>,
      sfSound = <userdata 116>,
      sfSoundBuffer = <userdata 117>,
      shot_message = <userdata 118>,
      should_debug_draw = false,
      simple_create_polygon = <function 174>,
      simple_integration = <function 175>,
      sprite = <userdata 119>,
      stability = 1,
      steering_behaviour = <userdata 120>,
      steering_component = <userdata 121>,
      stepped_timer = <userdata 122>,
      string = <9>{
        byte = <function 176>,
        char = <function 177>,
        dump = <function 178>,
        find = <function 179>,
        format = <function 180>,
        gmatch = <function 181>,
        gsub = <function 182>,
        len = <function 183>,
        lower = <function 184>,
        match = <function 185>,
        rep = <function 186>,
        reverse = <function 187>,
        sub = <function 188>,
        upper = <function 189>
      },
      super = <function 190>,
      table = <10>{
        concat = <function 191>,
        insert = <function 192>,
        inspect = <11>{
          _DESCRIPTION = "human-readable representations of tables",
          _LICENSE = '    MIT LICENSE\n\n    Copyright (c) 2013 Enrique Garc√≠a Cota\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the\n    "Software"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  ',
          _URL = "http://github.com/kikito/inspect.lua",
          _VERSION = "inspect.lua 2.0.0",
          inspect = <function 193>,
          <metatable> = {
            __call = <function 194>
          }
        },
        pack = <function 195>,
        remove = <function 196>,
        sort = <function 197>,
        unpack = <function 198>
      },
      target_gravity_rotation = 0,
      target_info = <userdata 123>,
      texture = <userdata 124>,
      textures = <userdata 125>,
      timed_sequence = {
        add_action = <function 199>,
        constructor = <function 200>,
        create = <function 201>,
        now_action = <function 202>,
        play = <function 203>,
        set_current_action = <function 204>,
        should_loop = <function 205>,
        start = <function 206>,
        validate_action = <function 207>,
        <metatable> = {
          __index = {}
        }
      },
      timer = <userdata 126>,
      to_vec2 = <function 208>,
      tonumber = <function 209>,
      tostring = <function 210>,
      transform_component = <userdata 127>,
      transform_state = <userdata 128>,
      type = <function 211>,
      vec2 = <userdata 129>,
      vec2_vector = <userdata 130>,
      vertex = <userdata 131>,
      vertex_triangle = <userdata 132>,
      visibility_component = <userdata 133>,
      visibility_layer = <userdata 134>,
      visibility_system = <userdata 135>,
      wander_behaviour = <userdata 136>,
      window = <userdata 137>,
      world = <userdata 138>,
      xpcall = <function 212>
    },
    bit32 = <table 3>,
    coroutine = <table 4>,
    debug = <table 5>,
    inspect = <table 11>,
    io = <table 6>,
    math = <table 7>,
    os = <table 8>,
    package = <table 1>,
    string = <table 9>,
    table = <table 10>
  },
  loadlib = <function 213>,
  path = "C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\lua\\?.lua;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\lua\\?\\init.lua;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\?.lua;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\?\\init.lua;.\\?.lua",
  preload = {},
  searchers = { <function 214>, <function 215>, <function 216>, <function 217> },
  searchpath = <function 218>
}

scriptable_info:
<userdata 1>

pairs:
<function 1>

global_sound_table:
{}

body_to_entity:
<function 1>

set_world_reloading_script:
<function 1>

STATIC_OBJECTS:
4

rect_xywh:
<userdata 1>

avoidance_behaviour:
<userdata 1>

stepped_timer:
<userdata 1>

navigation_hint:
<userdata 1>

renderable:
<userdata 1>

create_entity_group:
<function 1>

randval:
<function 1>

input_component:
<userdata 1>

assert:
<function 1>

to_vec2:
<function 1>

render_system:
<userdata 1>

animate_component:
<userdata 1>

b2PolygonShape:
<userdata 1>

OBJECTS:
2

particle_burst_message:
<userdata 1>

collectgarbage:
<function 1>

filter_static_objects:
{
  categoryBits = 4,
  maskBits = 7
}

string:
{
  byte = <function 1>,
  char = <function 2>,
  dump = <function 3>,
  find = <function 4>,
  format = <function 5>,
  gmatch = <function 6>,
  gsub = <function 7>,
  len = <function 8>,
  lower = <function 9>,
  match = <function 10>,
  rep = <function 11>,
  reverse = <function 12>,
  sub = <function 13>,
  upper = <function 14>
}

behaviour_state:
<userdata 1>

settings:
<userdata 1>

_G:
<1>{
  Box2D = <userdata 1>,
  CHARACTERS = 1,
  ENGINE_DIRECTORY = "engine\\",
  GL = <userdata 2>,
  GLSL_program = <userdata 3>,
  GLSL_shader = <userdata 4>,
  INSTABILITY_RAY = 8,
  METERS_TO_PIXELS = 50,
  OBJECTS = 2,
  PIXELS_TO_METERS = 0.02,
  STATIC_OBJECTS = 4,
  SetDensity = <function 1>,
  SetFriction = <function 2>,
  _G = <table 1>,
  _VERSION = "Lua 5.2",
  _entity = <userdata 5>,
  _input_system = <userdata 6>,
  _pathfinding_system = <userdata 7>,
  _physics_system = <userdata 8>,
  _render_system = <userdata 9>,
  _script_reloader = <userdata 10>,
  _visibility_system = <userdata 11>,
  _world = <userdata 12>,
  add_roots = <function 3>,
  add_vals = <function 4>,
  animate_component = <userdata 13>,
  animate_info = <userdata 14>,
  animate_message = <userdata 15>,
  animation = <userdata 16>,
  animation_events = <userdata 17>,
  archetyped = <function 5>,
  assert = <function 6>,
  atlas = <userdata 18>,
  avoidance_behaviour = <userdata 19>,
  b2Body = <userdata 20>,
  b2Filter = <userdata 21>,
  b2JointDef = <userdata 22>,
  b2PolygonShape = <userdata 23>,
  b2RevoluteJoint = <userdata 24>,
  b2RevoluteJointDef = <userdata 25>,
  b2Shape = <userdata 26>,
  b2Vec2 = <userdata 27>,
  b2WeldJoint = <userdata 28>,
  b2WeldJointDef = <userdata 29>,
  b2World = <userdata 30>,
  base_gravity = <userdata 31>,
  behaviour_decorator = <userdata 32>,
  behaviour_node = <userdata 33>,
  behaviour_state = <userdata 34>,
  behaviour_timer_decorator = <userdata 35>,
  behaviour_tree_component = <userdata 36>,
  behaviour_tree_task = <userdata 37>,
  bit32 = <2>{
    arshift = <function 7>,
    band = <function 8>,
    bnot = <function 9>,
    bor = <function 10>,
    btest = <function 11>,
    bxor = <function 12>,
    extract = <function 13>,
    lrotate = <function 14>,
    lshift = <function 15>,
    replace = <function 16>,
    rrotate = <function 17>,
    rshift = <function 18>
  },
  bitflag = <function 19>,
  bitor = <function 20>,
  body_to_entity = <function 21>,
  calc_air_resistance = <function 22>,
  calc_max_jump_height = <function 23>,
  call_on_modification = <function 24>,
  camera_component = <userdata 38>,
  can_point_be_reached_by_jump = <function 25>,
  changing_gravity = false,
  chase_component = <userdata 39>,
  children_component = <userdata 40>,
  clamp = <function 26>,
  class = <function 27>,
  class_info = <function 28>,
  class_info_data = <userdata 41>,
  class_names = <function 29>,
  collectgarbage = <function 30>,
  collision_message = <userdata 42>,
  common = <userdata 43>,
  config_table = {
    bpp = 24,
    doublebuffer = 1,
    fullscreen = 0,
    resolution_h = 1050,
    resolution_w = 1980,
    sensitivity = <userdata 44>,
    window_border = 0,
    window_name = "example",
    window_x = 0,
    window_y = 0
  },
  containment_behaviour = <userdata 45>,
  coroutine = <3>{
    create = <function 31>,
    resume = <function 32>,
    running = <function 33>,
    status = <function 34>,
    stepped_wait = <function 35>,
    wait = <function 36>,
    wrap = <function 37>,
    yield = <function 38>
  },
  create = <function 39>,
  create_animation = <function 40>,
  create_animation_set = <function 41>,
  create_behaviour_tree = <function 42>,
  create_emission = <function 43>,
  create_entity = <function 44>,
  create_entity_group = <function 45>,
  create_gun = <function 46>,
  create_input_context = <function 47>,
  create_inverse_enum = <function 48>,
  create_joint = <function 49>,
  create_options = <function 50>,
  create_particle = <function 51>,
  create_particle_effect = <function 52>,
  create_particle_emitter_info = <function 53>,
  create_physics_component = <function 54>,
  create_polygon = <function 55>,
  create_scriptable_info = <function 56>,
  create_sprite = <function 57>,
  create_steering = <function 58>,
  create_textures = <function 59>,
  crosshair_component = <userdata 46>,
  current_gravity = <userdata 47>,
  custom_intents = {
    DROP_WEAPON = 999999992,
    GRAVITY_CHANGE = 999999990,
    INSTABILITY_RAY = 999999988,
    INSTANT_SLOWDOWN = 999999996,
    JUMP = 999999991,
    MY_INTENT = 999999989,
    QUIT = 999999993,
    RESTART = 999999997,
    SPEED_DECREASE = 999999994,
    SPEED_INCREASE = 999999995,
    STEERING_REQUEST = 999999998,
    ZOOM_CAMERA = 999999999
  },
  damage_component = <userdata 48>,
  damage_message = <userdata 49>,
  debug = <4>{
    debug = <function 60>,
    gethook = <function 61>,
    getinfo = <function 62>,
    getlocal = <function 63>,
    getmetatable = <function 64>,
    getregistry = <function 65>,
    getupvalue = <function 66>,
    getuservalue = <function 67>,
    my_breakpoint = <function 68>,
    my_traceback = <function 69>,
    sethook = <function 70>,
    setlocal = <function 71>,
    setmetatable = <function 72>,
    setupvalue = <function 73>,
    setuservalue = <function 74>,
    traceback = <function 75>,
    upvalueid = <function 76>,
    upvaluejoin = <function 77>
  },
  debug_draw = <function 78>,
  debug_line = <userdata 50>,
  debug_target_sprite = <userdata 51>,
  debugger_break = <function 79>,
  destroy_message = <userdata 52>,
  directed_behaviour = <userdata 53>,
  dofile = <function 80>,
  drawable_concave = <userdata 54>,
  emission = <userdata 55>,
  entities = <userdata 56>,
  entity_creation_util = <userdata 57>,
  entity_ptr = <userdata 58>,
  entries_from_archetypes = <function 81>,
  error = <function 82>,
  filter_characters = {
    categoryBits = 1,
    maskBits = 15
  },
  filter_characters_separation = {
    categoryBits = 15,
    maskBits = 1
  },
  filter_instability_ray = {
    categoryBits = 15,
    maskBits = 1
  },
  filter_nothing = {
    categoryBits = 0,
    maskBits = 0
  },
  filter_npc_feet = {
    categoryBits = 15,
    maskBits = 7
  },
  filter_objects = {
    categoryBits = 2,
    maskBits = 7
  },
  filter_obstacle_visibility = {
    categoryBits = 15,
    maskBits = 7
  },
  filter_pathfinding_visibility = {
    categoryBits = 4,
    maskBits = 4
  },
  filter_player_visibility = {
    categoryBits = 15,
    maskBits = 4
  },
  filter_static_objects = {
    categoryBits = 4,
    maskBits = 7
  },
  flee_behaviour = <userdata 59>,
  float_ptr = <userdata 60>,
  float_vector = <userdata 61>,
  flocking_behaviour = <userdata 62>,
  framebuffer_object = <userdata 63>,
  gen_circle_vertices = <function 83>,
  get_display = <function 84>,
  getmetatable = <function 85>,
  global_instability_rays = {},
  global_sound_table = {},
  glwindow = <userdata 64>,
  gravity_angle_offset = 0,
  gun_component = <userdata 65>,
  images = {
    blank = <userdata 66>
  },
  inherits_from = <function 86>,
  input_component = <userdata 67>,
  input_context = <userdata 68>,
  input_system = <userdata 69>,
  instability_ray_caster = {
    cast = <function 87>,
    construct_world_polygon = <function 88>,
    constructor = <function 89>,
    create = <function 90>,
    loop = <function 91>,
    render = <function 92>,
    <metatable> = {
      __index = {}
    }
  },
  intent_message = <userdata 70>,
  io = <5>{
    close = <function 93>,
    flush = <function 94>,
    input = <function 95>,
    lines = <function 96>,
    open = <function 97>,
    output = <function 98>,
    popen = <function 99>,
    read = <function 100>,
    stderr = <userdata 71>,
    stdin = <userdata 72>,
    stdout = <userdata 73>,
    tmpfile = <function 101>,
    type = <function 102>,
    write = <function 103>
  },
  ipairs = <function 104>,
  keys = <userdata 74>,
  layers = <userdata 75>,
  load = <function 105>,
  loadfile = <function 106>,
  lookat_component = <userdata 76>,
  main_context = <userdata 77>,
  map_uv_square = <function 107>,
  math = <6>{
    abs = <function 108>,
    acos = <function 109>,
    asin = <function 110>,
    atan = <function 111>,
    atan2 = <function 112>,
    ceil = <function 113>,
    cos = <function 114>,
    cosh = <function 115>,
    deg = <function 116>,
    exp = <function 117>,
    floor = <function 118>,
    fmod = <function 119>,
    frexp = <function 120>,
    huge = 1.#INF,
    ldexp = <function 121>,
    log = <function 122>,
    max = <function 123>,
    min = <function 124>,
    modf = <function 125>,
    pi = 3.1415926535898,
    pow = <function 126>,
    rad = <function 127>,
    random = <function 128>,
    randomseed = <function 129>,
    sin = <function 130>,
    sinh = <function 131>,
    sqrt = <function 132>,
    tan = <function 133>,
    tanh = <function 134>
  },
  message = <userdata 78>,
  minmax = <userdata 79>,
  minmax_u = <userdata 80>,
  mouse = <userdata 81>,
  movement_component = <userdata 82>,
  my_atlas = <userdata 83>,
  navigation_hint = <userdata 84>,
  next = <function 135>,
  obstacle_avoidance_behaviour = <userdata 85>,
  open_script = <function 136>,
  orthographic_projection = <function 137>,
  os = <7>{
    clock = <function 138>,
    date = <function 139>,
    difftime = <function 140>,
    execute = <function 141>,
    exit = <function 142>,
    getenv = <function 143>,
    remove = <function 144>,
    rename = <function 145>,
    setlocale = <function 146>,
    time = <function 147>,
    tmpname = <function 148>
  },
  package = <8>{
    config = "\\\\n;\\n?\\n!\\n-\\n",
    cpath = "C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\?.dll;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\loadall.dll;.\\?.dll",
    loaded = {
      _G = <table 1>,
      bit32 = <table 2>,
      coroutine = <table 3>,
      debug = <table 4>,
      inspect = <9>{
        _DESCRIPTION = "human-readable representations of tables",
        _LICENSE = '    MIT LICENSE\n\n    Copyright (c) 2013 Enrique Garc√≠a Cota\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the\n    "Software"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  ',
        _URL = "http://github.com/kikito/inspect.lua",
        _VERSION = "inspect.lua 2.0.0",
        inspect = <function 149>,
        <metatable> = {
          __call = <function 150>
        }
      },
      io = <table 5>,
      math = <table 6>,
      os = <table 7>,
      package = <table 8>,
      string = <10>{
        byte = <function 151>,
        char = <function 152>,
        dump = <function 153>,
        find = <function 154>,
        format = <function 155>,
        gmatch = <function 156>,
        gsub = <function 157>,
        len = <function 158>,
        lower = <function 159>,
        match = <function 160>,
        rep = <function 161>,
        reverse = <function 162>,
        sub = <function 163>,
        upper = <function 164>
      },
      table = <11>{
        concat = <function 165>,
        insert = <function 166>,
        inspect = <table 9>,
        pack = <function 167>,
        remove = <function 168>,
        sort = <function 169>,
        unpack = <function 170>
      }
    },
    loadlib = <function 171>,
    path = "C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\lua\\?.lua;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\lua\\?\\init.lua;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\?.lua;C:\\Users\\Anon\\Documents\\GitHub\\Augmentations\\..\\Sensibilia\\?\\init.lua;.\\?.lua",
    preload = {},
    searchers = { <function 172>, <function 173>, <function 174>, <function 175> },
    searchpath = <function 176>
  },
  pairs = <function 177>,
  particle = <userdata 86>,
  particle_burst_message = <userdata 87>,
  particle_effect = <userdata 88>,
  particle_emitter_component = <userdata 89>,
  particle_emitter_info = <userdata 90>,
  pathfinding_component = <userdata 91>,
  pathfinding_system = <userdata 92>,
  pcall = <function 178>,
  physics_component = <userdata 93>,
  physics_info = <userdata 94>,
  physics_system = <userdata 95>,
  point_below_segment = <function 179>,
  polygon = <userdata 96>,
  post_destroy = <function 180>,
  print = <function 181>,
  property = <function 182>,
  ptr_create_entity = <function 183>,
  ptr_create_entity_group = <function 184>,
  ptr_lookup = <function 185>,
  pv = <function 186>,
  query_output = <userdata 97>,
  randval = <function 187>,
  raw_texture = <userdata 98>,
  rawequal = <function 188>,
  rawget = <function 189>,
  rawlen = <function 190>,
  rawset = <function 191>,
  raycast_output = <userdata 99>,
  rect_ltrb = <userdata 100>,
  rect_xywh = <userdata 101>,
  recursive_write = <function 192>,
  reloader_script = <userdata 102>,
  render_component = <userdata 103>,
  render_layers = {
    BULLETS = 6,
    EFFECTS = 1,
    GROUND = 13,
    GUI_OBJECTS = 0,
    HEADS = 3,
    LEGS = 8,
    OBJECTS = 2,
    ON_GROUND = 10,
    PLAYERS = 5,
    SHELLS = 9,
    UNDER_CORPSES = 12,
    WIELDED = 7,
    WIELDED_GUNS = 4
  },
  render_system = <userdata 104>,
  renderable = <userdata 105>,
  require = <function 193>,
  resource_creation_util = <userdata 106>,
  reversed = <function 194>,
  rewrite = <function 195>,
  rewrite_ptr = <function 196>,
  rgba = <userdata 107>,
  script = <userdata 108>,
  script_reloader = <userdata 109>,
  scriptable_component = <userdata 110>,
  scriptable_info = <userdata 111>,
  seek_behaviour = <userdata 112>,
  select = <function 197>,
  separation_behaviour = <userdata 113>,
  set_components_from_entry = <function 198>,
  set_physics_info = <function 199>,
  set_world_reloading_script = <function 200>,
  setmetatable = <function 201>,
  settings = <userdata 114>,
  sfMusic = <userdata 115>,
  sfSound = <userdata 116>,
  sfSoundBuffer = <userdata 117>,
  shot_message = <userdata 118>,
  should_debug_draw = false,
  simple_create_polygon = <function 202>,
  simple_integration = <function 203>,
  sprite = <userdata 119>,
  stability = 1,
  steering_behaviour = <userdata 120>,
  steering_component = <userdata 121>,
  stepped_timer = <userdata 122>,
  string = <table 10>,
  super = <function 204>,
  table = <table 11>,
  target_gravity_rotation = 0,
  target_info = <userdata 123>,
  texture = <userdata 124>,
  textures = <userdata 125>,
  timed_sequence = {
    add_action = <function 205>,
    constructor = <function 206>,
    create = <function 207>,
    now_action = <function 208>,
    play = <function 209>,
    set_current_action = <function 210>,
    should_loop = <function 211>,
    start = <function 212>,
    validate_action = <function 213>,
    <metatable> = {
      __index = {}
    }
  },
  timer = <userdata 126>,
  to_vec2 = <function 214>,
  tonumber = <function 215>,
  tostring = <function 216>,
  transform_component = <userdata 127>,
  transform_state = <userdata 128>,
  type = <function 217>,
  vec2 = <userdata 129>,
  vec2_vector = <userdata 130>,
  vertex = <userdata 131>,
  vertex_triangle = <userdata 132>,
  visibility_component = <userdata 133>,
  visibility_layer = <userdata 134>,
  visibility_system = <userdata 135>,
  wander_behaviour = <userdata 136>,
  window = <userdata 137>,
  world = <userdata 138>,
  xpcall = <function 218>
}

rewrite:
<function 1>

bitor:
<function 1>

behaviour_tree_task:
<userdata 1>

damage_component:
<userdata 1>

b2Shape:
<userdata 1>

reloader_script:
<userdata 1>

tonumber:
<function 1>

window:
<userdata 1>

calc_air_resistance:
<function 1>

config_table:
{
  bpp = 24,
  doublebuffer = 1,
  fullscreen = 0,
  resolution_h = 1050,
  resolution_w = 1980,
  sensitivity = <userdata 1>,
  window_border = 0,
  window_name = "example",
  window_x = 0,
  window_y = 0
}

my_atlas:
<userdata 1>

next:
<function 1>

input_system:
<userdata 1>

mouse:
<userdata 1>

keys:
<userdata 1>

transform_state:
<userdata 1>

seek_behaviour:
<userdata 1>

raw_texture:
<userdata 1>

GL:
<userdata 1>

gravity_angle_offset:
0

debugger_break:
<function 1>

visibility_system:
<userdata 1>

rect_ltrb:
<userdata 1>

debug_target_sprite:
<userdata 1>

class:
<function 1>

intent_message:
<userdata 1>

destroy_message:
<userdata 1>

vec2:
<userdata 1>

instability_ray_caster:
{
  cast = <function 1>,
  construct_world_polygon = <function 2>,
  constructor = <function 3>,
  create = <function 4>,
  loop = <function 5>,
  render = <function 6>,
  <metatable> = {
    __index = {}
  }
}

b2World:
<userdata 1>

_VERSION:
"Lua 5.2"

tostring:
<function 1>

filter_pathfinding_visibility:
{
  categoryBits = 4,
  maskBits = 4
}

behaviour_tree_component:
<userdata 1>

debug_line:
<userdata 1>

behaviour_node:
<userdata 1>

filter_objects:
{
  categoryBits = 2,
  maskBits = 7
}

debug:
{
  debug = <function 1>,
  gethook = <function 2>,
  getinfo = <function 3>,
  getlocal = <function 4>,
  getmetatable = <function 5>,
  getregistry = <function 6>,
  getupvalue = <function 7>,
  getuservalue = <function 8>,
  my_breakpoint = <function 9>,
  my_traceback = <function 10>,
  sethook = <function 11>,
  setlocal = <function 12>,
  setmetatable = <function 13>,
  setupvalue = <function 14>,
  setuservalue = <function 15>,
  traceback = <function 16>,
  upvalueid = <function 17>,
  upvaluejoin = <function 18>
}

post_destroy:
<function 1>

children_component:
<userdata 1>

shot_message:
<userdata 1>

filter_nothing:
{
  categoryBits = 0,
  maskBits = 0
}

script:
<userdata 1>

INSTABILITY_RAY:
8

coroutine:
{
  create = <function 1>,
  resume = <function 2>,
  running = <function 3>,
  status = <function 4>,
  stepped_wait = <function 5>,
  wait = <function 6>,
  wrap = <function 7>,
  yield = <function 8>
}

physics_component:
<userdata 1>

particle_emitter_component:
<userdata 1>

vec2_vector:
<userdata 1>

render_layers:
{
  BULLETS = 6,
  EFFECTS = 1,
  GROUND = 13,
  GUI_OBJECTS = 0,
  HEADS = 3,
  LEGS = 8,
  OBJECTS = 2,
  ON_GROUND = 10,
  PLAYERS = 5,
  SHELLS = 9,
  UNDER_CORPSES = 12,
  WIELDED = 7,
  WIELDED_GUNS = 4
}

create_textures:
<function 1>

layers:
<userdata 1>

super:
<function 1>

create_steering:
<function 1>

filter_characters:
{
  categoryBits = 1,
  maskBits = 15
}

entities:
<userdata 1>

bitflag:
<function 1>

recursive_write:
<function 1>

input_context:
<userdata 1>

sfSoundBuffer:
<userdata 1>

create_scriptable_info:
<function 1>

ptr_lookup:
<function 1>

add_roots:
<function 1>

atlas:
<userdata 1>

b2WeldJointDef:
<userdata 1>

_world:
<userdata 1>

drawable_concave:
<userdata 1>

type:
<function 1>

create_input_context:
<function 1>

xpcall:
<function 1>

create_particle:
<function 1>

create_animation:
<function 1>

timer:
<userdata 1>

calc_max_jump_height:
<function 1>

create_polygon:
<function 1>

create_options:
<function 1>

METERS_TO_PIXELS:
50

particle_emitter_info:
<userdata 1>

pcall:
<function 1>

containment_behaviour:
<userdata 1>

flocking_behaviour:
<userdata 1>

chase_component:
<userdata 1>

scriptable_component:
<userdata 1>

b2RevoluteJoint:
<userdata 1>

animate_info:
<userdata 1>

point_below_segment:
<function 1>

lookat_component:
<userdata 1>

collision_message:
<userdata 1>

float_ptr:
<userdata 1>

sfSound:
<userdata 1>

entries_from_archetypes:
<function 1>

animation_events:
<userdata 1>

GLSL_shader:
<userdata 1>

b2WeldJoint:
<userdata 1>

inherits_from:
<function 1>

Box2D:
<userdata 1>

loadfile:
<function 1>

animate_message:
<userdata 1>

sfMusic:
<userdata 1>

b2Filter:
<userdata 1>

vertex:
<userdata 1>

script_reloader:
<userdata 1>

glwindow:
<userdata 1>

changing_gravity:
false

_entity:
<userdata 1>

clamp:
<function 1>

visibility_component:
<userdata 1>

simple_create_polygon:
<function 1>

damage_message:
<userdata 1>

SetFriction:
<function 1>

set_components_from_entry:
<function 1>

b2JointDef:
<userdata 1>

steering_behaviour:
<userdata 1>

render_component:
<userdata 1>

